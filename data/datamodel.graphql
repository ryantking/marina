type Organization {
	id: ID! @id
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
	name: String! @unique
	repos: [Repository!]!
    blobs: [Blob!]!
    images: [Image!]!
}

type Repository {
	id: ID! @id
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
	name: String!
    fullName: String!
	org: Organization! @relation(link: INLINE)
	blobs: [Blob!]!
    images: [Image!]!
}

type Image {
	id: ID! @id
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
	repo: Repository! @relation(link: INLINE)
	digest: String! @unique
	manifest: String!
	manifestType: String!
	tags: [Tag!]!
}

type Tag {
	id: ID! @id
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
    ref: String!
	image: Image! @relation(link: INLINE)
}

type Blob {
	id: ID! @id
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
	digest: String! @unique
	repo: Repository!
}

type Upload {
	id: ID! @id
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
	uuid: String! @unique
	done: Boolean! @default(value: false)
	chunks: [Chunk!]!
}

type Chunk {
	id: ID! @id
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
	upload: Upload! @relation(link: INLINE)
	rangeStart: Int!
	rangeEnd: Int!
}

